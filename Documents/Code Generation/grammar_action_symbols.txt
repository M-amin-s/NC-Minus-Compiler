Program -> Declaration_list eof

Declaration_list -> Declaration Declaration_list | epsilon
Declaration -> #ptype_dec Type_specifier #pid_dec id Var_Fun_declaration
Var_Fun_declaration -> Var_declaration_1 | ( Params ) Compound_stmt
Var_declaration -> Type_specifier id Var_declaration_1
Var_declaration_1 -> ; #var_dec_finish | [ #arr_len_dec num ] ; #arr_dec_finish
Type_specifier -> int | void
Params -> #ptype_void_dec void Params_1 | Params_2
Params_1 -> Param_list_void | epsilon #no_arg_func
Param_list_void -> Param_void Param_list_1
Param_void -> #pid_fun_dec id Param_1
Params_2 -> Param_void_1 Param_list_1
Param_void_1 -> int id Param_1
Param_list -> Param Param_list_1
Param_list_1 -> , Param_list | epsilon
Param -> Type_specifier id Param_1
Param_1 -> [ ] | epsilon


Compound_stmt -> { Declaration_list Statement_list }
Statement_list -> Statement Statement_list | epsilon
Statement -> Expression_stmt | Compound_stmt | Selection_stmt | Iteration_stmt | Return_stmt | Switch_stmt
Expression_stmt -> Expression ; | continue ; | break ; | ;
Selection_stmt -> if ( Expression ) Statement else Statement
Iteration_stmt -> while ( Expression ) Statement
Return_stmt -> return Return_stmt_1
Return_stmt_1 -> ; | Expression ;
Switch_stmt -> switch ( Expression ) { Case_stmts Default_stmt }
Case_stmts -> Case_stmt Case_stmts | epsilon
Case_stmt -> case num : Statement_list
Default_stmt -> default : Statement_list | epsilon
Expression -> id Expression_id_1 | Expression_id_2
Simple_expression_id_1 -> Additive_expression_id_1 Simple_expression_1
Additive_expression_id_1 -> Term_id_1 Additive_expression_1
Term_id_1 -> Signed_factor_id Term_1
Signed_factor_id -> Var_Call
Expression_id_1 -> Var_1 Expression_ob_1 | Simple_expression_id_ob_2
Expression_ob_1 -> = Expression | Simple_expression_id_ob_1
Simple_expression_id_ob_1 -> Additive_expression_id_ob_1 Simple_expression_1
Additive_expression_id_ob_1 -> Term_1 Additive_expression_1
Simple_expression_id_ob_2 -> Additive_expression_id_ob_2 Simple_expression_1
Additive_expression_id_ob_2 -> Term_id_ob_2 Additive_expression_1
Term_id_ob_2 -> ( Args ) Term_1
Var_1 -> [ Expression ] | epsilon
Simple_expression -> Additive_expression Simple_expression_1
Simple_expression_1 -> Relop Additive_expression | epsilon
Relop -> < | ==
Additive_expression -> Term Additive_expression_1
Additive_expression_1 -> Addop Additive_expression | epsilon
Addop -> + | -
Term -> Signed_factor Term_1
Term_1 -> * Term | epsilon
Signed_factor -> Factor | + Factor | - Factor
Factor -> ( Expression ) | id Var_Call | num
Var_Call -> ( Args ) | Var_1
Call -> id ( Args )
Args -> Arg_list | epsilon
Arg_list -> Expression Arg_list_1
Arg_list_1 -> , Arg_list | epsilon
Expression_id_2 -> Additive_expression_id_2 Simple_expression_1
Additive_expression_id_2 -> Term_id_2 Additive_expression_1
Term_id_2 -> Signed_factor_id_2 Term_1
Signed_factor_id_2 -> Factor_id_1 | + Factor | - Factor
Factor_id_1 -> ( Expression ) | num